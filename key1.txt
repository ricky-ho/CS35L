Exercise 1.1:
2. C-s H T M L Enter
3. C-s s c M-b
4. C-s s e l f M-b
5. C-s a r r o w M-b
6. C-e
7. C-a
8. Yes, use C-a
9. No
10. C-z


Exercise 1.2:
2. M-g g 1 8 Enter C-k
3. C-s d e l C-a C-k
4. C-s w i k i p C-s C-a Up C-k Down C-k Down C-k
5. C-s < ! Left Left C-d C-d C-d C-d C-d C-d C-d Down C-a C-k Down C-k Down C-k Down C-k C-s M-p - Enter C-a C-k


Exercise 1.3:
2. C-s A M-f Right C-d 4 2 C-s A M-f Right C-d 4 2
3. M-< C-s U T Delete C-d C-d C-d S - A S C I I
4. C-M-s [ ^ [ : a s c i i : ] ] C-a C-k C-M-s M-p Enter
5. M-< C-s < / o C-e Enter
6. C-x C-c y d i f f SP - u SP e x e r 1 . h t m l SP e x e r 3 . h t m l SP > e x e r 3 . d i f f Enter


Exercise 1.4:
1. c a t SP e x e r 2 . h t m l SP e x e r 2 . d i f f SP > e x e r 4 . h t m l Enter 
3. M-> C-r < ! Enter C-@ C-e M-w M-g g 4 0 5 Enter C-y Enter
4. M-> C-r < ! C-r Enter C-@ Down Down Down C-e M-w M-g g 3 8 7 Enter C-y
   M-> C-r < ! C-r C-r Enter C-@ M-f Left Left Left Left M-w M-g g 3 8 6 Enter 
   C-e Left Left Left Left Left C-y
   M-> C-r < ! C-r C-r C-r Enter C-@ C-n C-n C-e M-w M-g g 3 4 0 Enter C-y
   M-> C-r < ! C-r C-r C-r C-r Enter C-@ C-e M-w M-g g 1 2 7 Enter C-y
   M-> C-r < ! C-r C-r C-r C-r C-r Enter C-@ C-e M-w M-g g 1 8 Enter C-y 
5. M-> C-r - - - SP Enter C-@ M-> Delete
6. C-x u
7. M-> C-r - - - SP Up < ! - - C-s - - > Enter Delete C-s M-p Enter Enter Delete 
   C-s M-p Enter Enter Delete C-s M-p Enter Enter Delete C-s M-p Enter Enter Delete
   C-s M-p Enter Enter Delete M-> - - > 
8. M-< C-s < o l > C-s C-s C-s C-s C-s C-s C-s
   7 occurrences
   M-< M-% < o l > Enter < o L > Enter y y y y y y y
9. d i f f SP - u SP e x e r 1 . h t m l SP e x e r 4 . h t m l SP > e x e r 4 . d i f f Enter


Exercise 1.5:
1. e m a c s Enter M-x m k d i r Enter j u n k Enter
2. M-x c d Enter j u n k Enter C-x C-f h e l l o . c Enter
   Manually Copy the C Code
   C-x C-s 
3. M-x c o m p i l e Enter Delete Delete Delete Delete Delete Delete Delete Delete
   g c c SP h e l l o . c SP - o SP h e l l o Enter
4. M-x c o m p i l e Enter Down . / h e l l o Enter C-x C-w h e l l o - o u t Enter
5. C-x i Delete Delete Delete Delete Delete C S 3 5 L / A s s i g n m e n t # 1 / k e y 1 . t x t Enter
   C-x C-w Delete Delete Delete Delete Delete C S 3 5 L / A s s i g n m e n t # 1 / k e y 1 . t x t Enter y

-*- mode: compilation; default-directory: "~/junk/" -*-
Compilation started at Sat Oct  6 20:32:21

./hello
#include <stdio.h>
int
main (void)
{
  char n = '\n', b = '\\', q = '"';
 char const *p = "#include <stdio.h>%cint%cmain (void)%c{%c  char n = '%cn', b = '%c%c', q = '%c';%c char const *p = %c%s%c;%c printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);%c  return 0;%c}%c";
 printf (p, n, n, n, n, b, b, b, q, n, q, p, q, n, n, n, n);
  return 0;
}

Compilation finished at Sat Oct  6 20:32:21


Exercise 1.6:
1. e m a c s Enter C-x b Enter
2. ( r a n d o m " 8 0 4 - 7 5 1 - 3 1 4 " ) C-j
   561864867835110403
3. ( s e t q SP x SP ( r a n d o m ) ) C-j
   ( s e t q SP y SP ( r a n d o m ) ) C-j
4. ( * SP x SP y ) C-j
   1331877427938784384 This answer is not mathematically correct.
5. M - : SP ( * SP x SP y ) C-j
   The answer is the same.
6. No, the two random integers are not truly random in a mathematical sense because
   it is being generated by some sort of algorithm by the program and has constraints
   on the largest and smallest possible integer it can take since computers have 
   limits on expressing extremely large or small numbers.
7. If (random) was truly random, the probability that the two-variable product
   being mathematically incorrect would be extremely high or would be nearly always
   incorrect because numbers are infinite in a mathematical sense, while computers
   can only represent integers up to 2^n with n being the number of bits. Thus the 
   probability of generating an extremely large number would be greater than
   generating a number within the 2^n range, let alone multiplying those numbers 
   together, which would further enlarge or minimize the numbers beyond a computer's
   ability to calculate without overflow.  
